[{"/Users/hashkazi/Desktop/widgets/src/index.js":"1","/Users/hashkazi/Desktop/widgets/src/Components/App.js":"2","/Users/hashkazi/Desktop/widgets/src/Components/Accordion.js":"3","/Users/hashkazi/Desktop/widgets/src/Components/Search.js":"4","/Users/hashkazi/Desktop/widgets/src/Components/Dropdown.js":"5","/Users/hashkazi/Desktop/widgets/src/Components/Translate.js":"6","/Users/hashkazi/Desktop/widgets/src/Components/Convert.js":"7"},{"size":154,"mtime":1611164812191,"results":"8","hashOfConfig":"9"},{"size":1092,"mtime":1611231910337,"results":"10","hashOfConfig":"9"},{"size":896,"mtime":1611166792824,"results":"11","hashOfConfig":"9"},{"size":2077,"mtime":1611209556641,"results":"12","hashOfConfig":"9"},{"size":1505,"mtime":1611231903976,"results":"13","hashOfConfig":"9"},{"size":1050,"mtime":1611333966268,"results":"14","hashOfConfig":"9"},{"size":1183,"mtime":1611337204336,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"tdoqyv",{"filePath":"19","messages":"20","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/hashkazi/Desktop/widgets/src/index.js",[],["34","35"],"/Users/hashkazi/Desktop/widgets/src/Components/App.js",["36","37","38","39","40","41"],"import React, {useState} from 'react';\nimport Accordion from './Accordion';\nimport Dropdown from './Dropdown';\nimport Search from './Search';\nimport Translate from './Translate';\n\nconst items = [\n    {\n        title: 'what is react?',\n        content: 'why does it even bother you what it is '\n    },{\n        title:'Heard of Vue?',\n        content: 'What is wrong with you, you here to bluff of react'\n    },{\n        title:'Have you been paid?',\n        content:'What does it have with our conversation...'\n    }\n]\n\nconst options = [\n    {\n        label:'The Color Red',\n        value:'red'\n    },{\n        label:'The Color Green',\n        value:'green'\n    },{\n        label:'A Shade Of Blue',\n        value:'blue'\n    }\n]\n\nconst App = () => {\n\n    // const [selected, setSelected] = useState(options[0]);\n\n    return (<div>\n                {/* <Accordion items={items}/> */}\n                {/* <Search /> */}\n                {/* <Dropdown options={options} selected={selected} onSelectedChange={setSelected}/> */}\n                <Translate />\n            </div>);\n}\n\nexport default App;","/Users/hashkazi/Desktop/widgets/src/Components/Accordion.js",[],"/Users/hashkazi/Desktop/widgets/src/Components/Search.js",["42"],"import axios from 'axios';\nimport React, {useState, useEffect} from 'react';\n\n\nconst Search = () =>{\n\n    const [term, setTerm] = useState('programming');\n    const [debouncedTerm, setDebouncedTerm] = useState(term);\n    const [results, setResults] = useState([]);\n\n\n    useEffect(()=> {\n        const timerId = setTimeout(()=>{\n            \n            setDebouncedTerm(term)\n        }, 500);\n\n        \n\n        return () => {\n            clearTimeout(timerId)\n        }\n    }, [term]);\n\n    useEffect(() => {\n        const search = async () => {\n            const {data} = await axios.get('https://en.wikipedia.org/w/api.php', {\n                params:{\n                    action:'query',\n                    list:'search',\n                    format:'json',\n                    origin:'*',\n                    srsearch:term\n                }\n            })\n            setResults(data.query.search);\n\n        } \n\n        search();\n\n        console.log('search');\n        \n    },[debouncedTerm]);\n\n\n    const renderedResults = results.map((result) => {\n        return (\n            <div className=\"item\" key={result.pageid}>\n                <div className=\"right floated content\">\n                    <a className=\"ui button\" href={`https://en.wikipedia.org?curid=${result.pageid}`} target=\"blank\">Go</a>\n                </div>\n                <div className=\"content\">\n                    <div className=\"header\">\n                        {result.title}\n                    </div>\n                    <span dangerouslySetInnerHTML={{__html:result.snippet}}></span>\n                </div>\n            </div>\n        );\n    })\n\n\n    return (\n        <div>\n            <div className=\"ui form\">\n                <div className=\"field\">\n                    <label>Enter Search Term</label>\n                    <input className=\"input\" value={term} onChange={(e)=>{setTerm(e.target.value)}}/>\n                </div>\n            </div>\n            <div className=\"ui celled list\">\n                {renderedResults}\n            </div>\n        </div>\n    );\n}\n\nexport default Search;","/Users/hashkazi/Desktop/widgets/src/Components/Dropdown.js",["43"],"import { render } from '@testing-library/react';\nimport React, { useState, useRef, useEffect } from 'react';\n\nconst Dropdown = ({label, options, selected, onSelectedChange}) => {\n\n    const [open, setOpen] = useState(false);\n\n    const ref = useRef();\n\n    useEffect(()=>{\n        const bodyClick = (event) => {\n            if(ref.current.contains(event.target)){\n                return;\n            }\n            setOpen(false); \n        };\n\n        document.body.addEventListener('click', bodyClick);\n\n        return () => {\n            document.body.removeEventListener('click', bodyClick);\n        }\n    },[])\n\n    const renderedOptions = options.map((option) => {\n\n        if(selected === option) return null;//Don't render the selected\n\n        return (\n            <div key={option.value} className=\"item\" onClick={() => onSelectedChange(option)}>\n                {option.label}\n            </div>\n        );\n    })\n\n\n    return (\n        <div ref={ref} className=\"ui form\">\n            <div className=\"field\">\n                <label className=\"label\">{label}</label>\n                <div className={`ui selection dropdown ${open?'visible active': ''}`} onClick={() => setOpen(!open)}>\n                    <i className=\"icon dropdown\"></i>\n                    <div className=\"text\">{selected.label}</div>\n                    <div className={`menu ${open?'visible transition': ''}`}>{renderedOptions}</div>\n                </div>\n            </div>\n        </div>\n    );;\n}\n\nexport default Dropdown;","/Users/hashkazi/Desktop/widgets/src/Components/Translate.js",[],"/Users/hashkazi/Desktop/widgets/src/Components/Convert.js",["44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":16,"nodeType":"51","messageId":"52","endLine":1,"endColumn":24},{"ruleId":"49","severity":1,"message":"53","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":17},{"ruleId":"49","severity":1,"message":"54","line":3,"column":8,"nodeType":"51","messageId":"52","endLine":3,"endColumn":16},{"ruleId":"49","severity":1,"message":"55","line":4,"column":8,"nodeType":"51","messageId":"52","endLine":4,"endColumn":14},{"ruleId":"49","severity":1,"message":"56","line":7,"column":7,"nodeType":"51","messageId":"52","endLine":7,"endColumn":12},{"ruleId":"49","severity":1,"message":"57","line":20,"column":7,"nodeType":"51","messageId":"52","endLine":20,"endColumn":14},{"ruleId":"58","severity":1,"message":"59","line":44,"column":7,"nodeType":"60","endLine":44,"endColumn":22,"suggestions":"61"},{"ruleId":"49","severity":1,"message":"62","line":1,"column":10,"nodeType":"51","messageId":"52","endLine":1,"endColumn":16},{"ruleId":"58","severity":1,"message":"63","line":37,"column":7,"nodeType":"60","endLine":37,"endColumn":33,"suggestions":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Accordion' is defined but never used.","'Dropdown' is defined but never used.","'Search' is defined but never used.","'items' is assigned a value but never used.","'options' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'term'. Either include it or remove the dependency array.","ArrayExpression",["67"],"'render' is defined but never used.","React Hook useEffect has a missing dependency: 'text'. Either include it or remove the dependency array.",["68"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},"Update the dependencies array to be: [debouncedTerm, term]",{"range":"73","text":"74"},"Update the dependencies array to be: [language, debouncedText, text]",{"range":"75","text":"76"},[982,997],"[debouncedTerm, term]",[955,981],"[language, debouncedText, text]"]